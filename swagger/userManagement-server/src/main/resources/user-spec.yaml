swagger: '2.0'
info:
  version: '0.1.0'
  title: UserEntity Management
  description: Nous permet de g√©rer les utilisateurs
host: 192.168.99.100:8181
basePath: /userapi
schemes:
  - http
paths:

  /user:
    post:
      security:
        - Bearer: []
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
    get:
      security:
        - Bearer: []
      description: get the list of all users
      operationId: getUsers
      produces:
      - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    delete:
      security:
        - Bearer: []
      summary: "Delete user"
      description: "This can only be done by admin."
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "user"
        in: "body"
        description: "The name that needs to be deleted"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"

    put:
      security:
        - Bearer: []
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            password:
              type: "string"

      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"


  /login:
    post:
      summary: "Logs user into the system"
      description: ""
      operationId: "userLoginToken"
      produces:
      - "application/json"
      parameters:
      - name: "user"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            password:
              type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
          headers:
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
securityDefinitions:
  Bearer:
    description: "Give the token at each user"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      email:
        type: "string"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      password:
        type: "string"
      isAdmin:
        type: "boolean"